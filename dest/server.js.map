{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"require(\\\"path\\\");\"","webpack:///./src/models/axios/index.js","webpack:///external \"require(\\\"worker_threads\\\");\"","webpack:///./src/update.js","webpack:///external \"require(\\\"fs\\\");\"","webpack:///external \"require(\\\"axios\\\");\"","webpack:///external \"require(\\\"express\\\");\"","webpack:///./src/models/torrent/index.js","webpack:///./src/config/index.js","webpack:///./src/server.js","webpack:///external \"require(\\\"cors\\\");\"","webpack:///./src/routes/index.js","webpack:///external \"require(\\\"body-parser\\\");\"","webpack:///./src/middleware/delay.js","webpack:///./src/middleware/ping.js","webpack:///./src/middleware/error.js","webpack:///./src/middleware/json.js","webpack:///./src/middleware/update.js","webpack:///./src/middleware/get-version.js","webpack:///./src/middleware/get-files.js","webpack:///external \"require(\\\"torrent-stream\\\");\"","webpack:///./src/models/tracker/index.js","webpack:///external \"require(\\\"ms\\\");\"","webpack:///./src/middleware/get-video.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","axios","defaultConfigs","headers","timeout","decompress","validateStatus","axiosFetch","path","fs","ROOT","resolve","__dirname","getCurrentVersion","async","packageJson","readFileSync","json","JSON","parse","version","e","console","error","getGitFile","data","url","filePath","method","responseType","transformResponse","res","getNextVersion","check","currentVer","split","nextVer","length","push","some","v","k","info","join","folder","match","map","item","getGitFolder","seq","Promise","forEach","fileName","idx","then","fileContent","writeFileSync","updateFile","torrentStream","tracker","config","cache","getMp4Files","magnetUrl","destroy","trackers","getTrackers","opts","torrent","engine","reject","setTimeout","Error","on","clearTimeout","mp4Files","files","filter","file","deselect","endsWith","getFile","find","port","connections","uploads","tmp","verify","dht","express","cors","routes","app","use","listen","trim","bodyParser","ping","update","getVersion","getFiles","getVideo","router","Router","urlencoded","extended","post","req","next","send","err","stack","set","Connection","status","success","type","title","message","Buffer","write","end","beforeJsonParse","query","a","afterJsonParse","body","parentPort","postMessage","event","ver","ms","Date","now","at","Boolean","replace","size","range","stream","start","parseInt","Number","isNaN","getSegment","writeHead","createReadStream","pipe"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = require(\"path\");;","const axios = require('axios');\n\nconst defaultConfigs = {\n  headers: { 'Accept-Encoding': '' },\n  timeout: 10000,\n  decompress: false,\n  validateStatus() {\n    return true;\n  },\n};\n\nconst axiosFetch = axios.create({\n  ...defaultConfigs,\n});\n\nmodule.exports = {\n  axios,\n  axiosFetch,\n};\n","module.exports = require(\"worker_threads\");;","const path = require('path');\nconst fs = require('fs');\nconst { axiosFetch } = require('./models/axios');\n\nconst ROOT =\n  process.env.NODE_ENV !== 'production'\n    ? path.resolve(__dirname, '../dest')\n    : path.resolve(__dirname);\n\nconst GIT_ENDPOINT = `https://github.com/daoquangphuong/free4talk-streaming/tree/master/dest`;\nconst GIT_RAW_ENDPOINT = `https://raw.githubusercontent.com/daoquangphuong/free4talk-streaming/master/dest`;\n\nconst getCurrentVersion = async () => {\n  try {\n    const packageJson = fs.readFileSync(\n      path.resolve(ROOT, 'package.json'),\n      'utf8'\n    );\n    const json = JSON.parse(packageJson);\n    const { version } = json;\n    return version;\n  } catch (e) {\n    console.error(e);\n    return `0.0.0`;\n  }\n};\n\nconst getGitFolder = async () => {\n  const { data } = await axiosFetch({\n    url: `${GIT_ENDPOINT}`,\n    method: 'GET',\n    responseType: 'text',\n    transformResponse: [res => res],\n  });\n  const fileMatches = data.match(\n    /\"\\/daoquangphuong\\/free4talk-streaming\\/blob\\/master\\/dest\\/(.+?)\"/g\n  );\n  const files = fileMatches.map(item => {\n    const match = item.match(\n      /\"\\/daoquangphuong\\/free4talk-streaming\\/blob\\/master\\/dest\\/(.+?)\"/\n    );\n    return match[1];\n  });\n  return files;\n};\n\nconst getGitFile = async filePath => {\n  const { data } = await axiosFetch({\n    url: `${GIT_RAW_ENDPOINT}/${filePath}`,\n    method: 'GET',\n    responseType: 'text',\n    transformResponse: [res => res],\n  });\n  return data;\n};\n\nconst getNextVersion = async () => {\n  try {\n    const packageJson = await getGitFile('package.json');\n    const json = JSON.parse(packageJson);\n    const { version } = json;\n    return version;\n  } catch (e) {\n    console.error(e);\n    return `0.0.0`;\n  }\n};\n\nconst updateFile = async fileName => {\n  const fileContent = await getGitFile(fileName);\n  fs.writeFileSync(path.resolve(ROOT, fileName), fileContent, 'utf8');\n};\n\nconst check = async () => {\n  const currentVer = (await getCurrentVersion()).split('.');\n  const nextVer = (await getNextVersion()).split('.');\n  while (currentVer.length < nextVer.length) {\n    currentVer.push('0');\n  }\n  while (nextVer.length < currentVer.length) {\n    nextVer.push('0');\n  }\n  const hasNewVersion = nextVer.some((v, k) => v > currentVer[k]);\n  if (!hasNewVersion) {\n    return;\n  }\n  console.info(`Has New Version ${nextVer.join('.')}`);\n  console.info('Updating...');\n  console.info('Please wait...');\n  const folder = await getGitFolder();\n  let seq = Promise.resolve();\n  folder.forEach((fileName, idx) => {\n    seq = seq.then(async () => {\n      console.info(`${idx + 1}/${folder.length} Updating ${fileName}`);\n      await updateFile(fileName);\n    });\n  });\n\n  await seq;\n};\n\nmodule.exports = {\n  getCurrentVersion,\n  getNextVersion,\n  check,\n};\n","module.exports = require(\"fs\");;","module.exports = require(\"axios\");;","module.exports = require(\"express\");;","const torrentStream = require('torrent-stream');\nconst tracker = require('../tracker');\nconst config = require('../../config');\n\nconst cache = {};\n\nconst getMp4Files = async (magnetUrl, destroy = true) => {\n  const trackers = await tracker.getTrackers();\n  const opts = {\n    ...config.torrent,\n    trackers,\n  };\n  const engine = torrentStream(magnetUrl, opts);\n\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => {\n      engine.destroy();\n      reject(new Error('Get Magnet Info Timeout'));\n    }, 30000);\n\n    engine.on('ready', () => {\n      clearTimeout(timeout);\n      const mp4Files = engine.files.filter(file => {\n        file.deselect();\n        file.engine = engine;\n        return file.name.endsWith('.mp4');\n      });\n      if (destroy) {\n        engine.destroy();\n      }\n      resolve(mp4Files);\n    });\n  });\n};\n\nconst getFile = async (magnetUrl, path) => {\n  if (cache.file) {\n    if (cache.magnetUrl === magnetUrl && cache.path === path) {\n      return cache.file;\n    }\n    cache.file.engine.destroy();\n  }\n  const files = await getMp4Files(magnetUrl, false);\n  const file = files.find(i => i.path === path);\n  if (!file) {\n    throw new Error('File is not found');\n  }\n  cache.magnetUrl = magnetUrl;\n  cache.path = path;\n  cache.file = file;\n  return file;\n};\n\nmodule.exports = {\n  getMp4Files,\n  getFile,\n};\n","const path = require('path');\n\nmodule.exports = {\n  port: 8888,\n  torrent: {\n    connections: 100, // Max amount of peers to be connected to.\n    uploads: 0, // Number of upload slots.\n    tmp: path.resolve(\n      __dirname,\n      process.env.NODE_ENV !== 'production' ? '../../tmp' : '../tmp'\n    ), // Root folder for the files storage.\n    // Defaults to '/tmp' or temp folder specific to your OS.\n    // Each torrent will be placed into a separate folder under /tmp/torrent-stream/{infoHash}\n    path: path.resolve(\n      __dirname,\n      process.env.NODE_ENV !== 'production'\n        ? '../../tmp/my-files'\n        : '../tmp/my-files'\n    ), // Where to save the files. Overrides `tmp`.\n    verify: true, // Verify previously stored data before starting\n    // Defaults to true\n    dht: true, // Whether or not to use DHT to initialize the swarm.\n    // Defaults to true\n    tracker: true, // Whether or not to use trackers from torrent file or magnet link\n    // Defaults to true\n    trackers: [],\n    // Allows to declare additional custom trackers to use\n    // Defaults to empty\n    // storage: myStorage()  // Use a custom storage backend rather than the default disk-backed one\n  },\n};\n","const express = require('express');\nconst cors = require('cors');\nconst routes = require('./routes');\nconst config = require('./config');\n\nconst app = express();\n\napp.use('/streaming', cors(), routes);\n\napp.listen(config.port, () => {\n  if (process.env.NODE_ENV !== 'production') {\n    console.info(\n      `You can now view free4talk-streaming-server in the browser. \\n\\n http://localhost:${config.port} \\n`\n    );\n    return;\n  }\n  console.info(\n    `\nFree4Talk-Streaming-Server is started.\nYou can comeback Free4Talk and start to use Streaming.\n  `.trim()\n  );\n});\n","module.exports = require(\"cors\");;","const express = require('express');\nconst bodyParser = require('body-parser');\nconst delay = require('../middleware/delay');\nconst ping = require('../middleware/ping');\nconst error = require('../middleware/error');\nconst json = require('../middleware/json');\nconst update = require('../middleware/update');\nconst getVersion = require('../middleware/get-version');\nconst getFiles = require('../middleware/get-files');\nconst getVideo = require('../middleware/get-video');\n\nconst router = express.Router();\n\nif (process.env.NODE_ENV !== 'production') {\n  router.use(delay());\n}\n\nrouter.use('/ping', ping);\n\nrouter.use(json('before'));\n\nrouter.use(bodyParser.urlencoded({ extended: true }));\n\nrouter.use(bodyParser.json());\n\nrouter.use(json('after'));\n\nrouter.post('/post/update', update);\n\nrouter.post('/get/version', getVersion);\n\nrouter.post('/get/files', getFiles);\n\nrouter.get('/get/video', getVideo);\n\n// error handler\nrouter.use(error);\n\nmodule.exports = router;\n","module.exports = require(\"body-parser\");;","module.exports = (timeout = 1000) => {\n  return async function delay(req, res, next) {\n    await new Promise(resolve => setTimeout(resolve, timeout));\n    next();\n  };\n};\n","module.exports = function ping(req, res) {\n  return res.send('pong');\n};\n","// eslint-disable-next-line\nmodule.exports = function error(err, req, res, next) {\n  if (err instanceof Error) {\n    console.error(err.stack);\n    res.set({ Connection: 'close' });\n    res.status(500).json({\n      success: false,\n      type: err.type,\n      title: err.title,\n      error: err.message,\n      data: null,\n    });\n  } else if (err instanceof Buffer) {\n    res.set({\n      'Content-Type': 'application/json',\n      'Content-Length': err.length,\n    });\n    res.write(err);\n    res.end();\n  } else {\n    res.json({\n      success: true,\n      error: null,\n      data: err,\n    });\n  }\n};\n","function beforeJsonParse(req, res, next) {\n  if (req.method !== 'POST') {\n    next();\n    return;\n  }\n  if (req.query.a) {\n    req.headers['content-type'] = 'application/json';\n    delete req.query.a;\n  }\n  next();\n}\n\nfunction afterJsonParse(req, res, next) {\n  if (req.method !== 'POST') {\n    next();\n    return;\n  }\n  if (req.body && req.body.body) {\n    req.body = req.body.body;\n  }\n  next();\n}\n\nmodule.exports = function json(type) {\n  return type === 'before' ? beforeJsonParse : afterJsonParse;\n};\n","const { parentPort } = require('worker_threads');\n\nmodule.exports = async function update(req, res, next) {\n  try {\n    next(true);\n    res.on('close', () => {\n      parentPort.postMessage({ event: 'update' });\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n","const { getCurrentVersion } = require('../update');\n\nmodule.exports = async function getVersion(req, res, next) {\n  try {\n    const ver = await getCurrentVersion();\n    next({\n      ver,\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n","const torrent = require('../models/torrent');\n\nmodule.exports = async function getFiles(req, res, next) {\n  try {\n    const { url } = req.body;\n\n    const files = await torrent.getMp4Files(url);\n\n    next({\n      files: files.map(file => ({\n        name: file.name,\n        path: file.path,\n        length: file.length,\n      })),\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n","module.exports = require(\"torrent-stream\");;","const ms = require('ms');\nconst { axiosFetch } = require('../axios');\n\nconst cache = {};\n\nconst getTrackers = async () => {\n  if (cache.trackers && Date.now() - cache.at < ms('1h')) {\n    return cache.trackers;\n  }\n\n  const { data } = await axiosFetch({\n    url: 'https://newtrackon.com/api/stable',\n    method: 'GET',\n  });\n\n  const trackers = (data || '')\n    .split('\\n')\n    .filter(Boolean)\n    .map(i => i.replace('/announce', ''));\n\n  if (trackers.length) {\n    cache.trackers = trackers;\n    cache.at = Date.now();\n  }\n\n  return trackers;\n};\n\nmodule.exports = {\n  getTrackers,\n};\n","module.exports = require(\"ms\");;","const torrent = require('../models/torrent');\n\nconst getSegment = (range, size) => {\n  let [start, end] = range.replace(/bytes=/, '').split('-');\n  start = parseInt(start, 10);\n  end = end ? parseInt(end, 10) : size - 1;\n\n  if (!Number.isNaN(start) && Number.isNaN(end)) {\n    end = size - 1;\n  }\n  if (Number.isNaN(start) && !Number.isNaN(end)) {\n    start = size - end;\n    end = size - 1;\n  }\n\n  return { start, end };\n};\n\nmodule.exports = async function getVideo(req, res, next) {\n  try {\n    const { url, path } = req.query;\n\n    const file = await torrent.getFile(url, path);\n\n    const size = file.length;\n    const { range } = req.headers;\n    let stream;\n    if (range) {\n      /** Extracting Start and End value from Range Header */\n      const { start, end } = getSegment(range, size);\n      // Handle unavailable range request\n      if (start >= size || end >= size) {\n        // Return the 416 Range Not Satisfiable.\n        res.writeHead(416, {\n          'Content-Range': `bytes */${size}`,\n        });\n        res.end();\n        return;\n      }\n\n      /** Sending Partial Content With HTTP Code 206 */\n      res.writeHead(206, {\n        'Content-Range': `bytes ${start}-${end}/${size}`,\n        'Accept-Ranges': 'bytes',\n        'Content-Length': end - start + 1,\n        'Content-Type': 'video/mp4',\n      });\n\n      stream = file.createReadStream({ start, end });\n    } else {\n      res.writeHead(200, {\n        'Content-Length': size,\n        'Content-Type': 'video/mp4',\n      });\n\n      stream = file.createReadStream();\n    }\n\n    stream.pipe(res);\n\n    res.on('close', () => {\n      stream.destroy();\n    });\n  } catch (e) {\n    next(e);\n  }\n};\n"],"sourceRoot":""}